{"version":3,"sources":["socket.js","component/MainPage.js","component/RoomManage.js","App.js","reportWebVitals.js","index.js"],"names":["URL","window","location","href","slice","socket","io","autoConnect","onAny","event","args","console","log","crypto","require","MessageArea","props","SubmitMessages","bind","handleChange","AddMessage","state","msg","message_list","on","msg_obj","setState","concat","obj","document","getElementById","scrollTop","scrollHeight","this","preventDefault","emit","e","target","value","messageDisplay","idx","sflag","length","styleTag","id","createHash","update","digest","push","className","name","message","class","Form","onSubmit","InputGroup","Control","type","onChange","autoComplete","Button","React","Component","UserList","user_list","userList","renderedUserList","map","user","ListGroup","Item","Card","CardHeader","ChatMain","RoomCreate","submitRoomCreate","copyInnertext","test","roomcode","roompw","roomn","roomp","val","navigator","clipboard","writeText","Container","Row","align","Col","size","Text","readOnly","variant","onClick","RoomSelect","username","lgdin","checkinputvalid","checklgnvalid","handleChangeRoomcode","handleChangeRoompw","handleChangeUsername","submitRoom","user_obj","FormControl","placeholder","isInvalid","Feedback","controledId","Alert","md","RoomManage","Tabs","defaultActiveKey","Tab","eventKey","title","roomSelecter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4dc9d2b5.chunk.js","sourcesContent":["import io from 'socket.io-client'\nconst URL = window.location.href.slice(0,-1)+':3002'        //http://123.123.123.123:3002\nconst socket = io(URL,{\n    \tautoConnect: true\n});\nsocket.onAny((event, ...args) => {\n    console.log(event, args);\n  });\nexport default socket;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport{ \n    Button,\n    InputGroup,\n    FormControl,\n    Form,\n    Container,\n    Col,\n    Row,\n    Tabs,\n    Tab,\n    Alert,\n    ListGroup,\n    Card\n} from 'react-bootstrap'\nimport CardHeader from 'react-bootstrap/esm/CardHeader';\nimport socket from '../socket';\nconst crypto  = require('crypto');\n\nclass MessageArea extends React.Component{\n  constructor(props){\n    super(props);\n    this.SubmitMessages = this.SubmitMessages.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.AddMessage = this.AddMessage.bind(this);\n    this.state = {msg: '', message_list: []}\n  }\n  componentDidMount(){\n    socket.on('chat_message', (msg_obj) => {\n      this.setState((state) => {\n        return { message_list: state.message_list.concat([msg_obj])};\n      });\n      let obj = document.getElementById('imessage_box');\n      obj.scrollTop = obj.scrollHeight;\n    });\n  }\n  \n  SubmitMessages(event){\n    console.log(this.state.message_list)\n    event.preventDefault();\n    if(this.state.msg){\n      socket.emit('chat_message', this.state.msg);\n    }\n    this.setState({msg: ''});\n    console.log(this.state.message_list)\n  }\n  AddMessage(e) {\n    console.log(e);\n  }\n  handleChange(event){\n    this.setState({msg: event.target.value});\n  }\n  render(){\n    const messageDisplay= [];\n    let idx = 0;\n    let sflag = 0;\n\n    if(this.state.message_list.length){\n      while(true){\n        var styleTag = (this.state.message_list[idx].id ==  crypto.createHash('sha512').update(socket.id).digest('hex')\n                        ? \"from-me\" : \"from-them\");\n        if(idx >= (this.state.message_list.length - 1)){\n          if(idx == sflag){\n            messageDisplay.push(<span className={styleTag}>{this.state.message_list[idx].name}</span>);\n          }\n          else{\n            styleTag += \" no-tail\";\n          }\n          messageDisplay.push(<p className={styleTag}>{this.state.message_list[idx].message}</p>)\n          break;\n        }\n        if(idx == sflag){\n          messageDisplay.push(<span className={styleTag}>{this.state.message_list[idx].name}</span>);\n        }\n        else{\n          styleTag += \" no-tail\";\n        }\n        if(this.state.message_list[idx].id != this.state.message_list[idx + 1].id){\n          sflag = idx + 1;\n        }\n        else{\n          styleTag += \" margin-b_none\"\n        }\n        messageDisplay.push(<p className={styleTag}>{this.state.message_list[idx].message}</p>)\n        idx++;\n      }\n  }\n    return(\n      <div className=\"messages_wrapper\">\n        <div className=\"messages\">\n          <div id=\"imessage_box\" class=\"imessage\">\n          {messageDisplay}\n    \n          </div>\n          <Form className=\"form\" onSubmit={this.SubmitMessages}>\n            <InputGroup>\n              <Form.Control type=\"text\" value={this.state.msg} onChange={this.handleChange} autoComplete=\"off\"/>\n              <Button type=\"submit\">Send</Button>\n            </InputGroup>\n          </Form>  \n        </div>\n      </div>\n    );\n  }\n}\nclass UserList extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = { user_list: []}\n  }\n  componentDidMount() {\n    socket.on('user_list', (userList) => {\n      this.setState({user_list: userList});\n    });\n  }\n  render(){\n    const renderedUserList = this.state.user_list.map((user) => {\n      return (<ListGroup.Item>{user}</ListGroup.Item>);\n    })\n    return(\n      <div className=\"user-list\">\n        <Card>\n        <CardHeader>User List</CardHeader>\n        <div className=\"user-list-users\">\n          <ListGroup>\n            {renderedUserList}\n          </ListGroup>\n        </div>\n        </Card>\n      </div>\n    );\n  }\n}\nclass ChatMain extends React.Component{\n  render(){\n    return(\n      <div className=\"chat-main\">\n        <UserList />\n        <MessageArea />\n      </div>\n    ); \n  }\n}\nexport default ChatMain;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport{ \n    Button,\n    InputGroup,\n    FormControl,\n    Form,\n    Container,\n    Col,\n    Row,\n    Tabs,\n    Tab,\n    Alert\n} from 'react-bootstrap'\nimport socket from '../socket'\nimport ChatMain from './MainPage';\n\nclass RoomCreate extends React.Component{\n    constructor(props){\n        super(props);\n        this.submitRoomCreate = this.submitRoomCreate.bind(this);\n        this.copyInnertext = this.copyInnertext.bind(this);\n        this.test = this.test.bind(this);\n        this.state = { roomcode : '', roompw : ''};\n    }\n    componentDidMount(){\n        socket.on('create_room', (roomn, roomp) => {\n            this.setState({roomcode: roomn, roompw: roomp});\n        });\n    }\n    submitRoomCreate(e) {\n        e.preventDefault();\n        socket.emit('create_room');\n    }\n    copyInnertext(id) {\n        const val = document.getElementById(id).value;\n        if(val){\n            navigator.clipboard.writeText(val);\n        }\n    }\n    test(e) {\n        console.log(document.getElementById(\"assignedrc\").value);\n        console.log(e.target);\n    }\n    render(){\n        return(\n            <div className=\"mb-5\">\n                <Container id=\"room_input\"  onSubmit={this.submitRoomCreate} >\n                    <Form>\n                    <Row className=\"mt-5\" align=\"center\">\n                        <Col>\n                            <InputGroup size=\"lg\">\n                                <InputGroup.Text>Roomcode</InputGroup.Text>\n                                <Form.Control id=\"assignedrc\" type=\"text\" value={this.state.roomcode} readOnly />                            \n                                <Button variant=\"outline-primary\" onClick={() => {this.copyInnertext(\"assignedrc\")}}>COPY</Button>\n                            </InputGroup>\n                        </Col>\n                    </Row>\n                    <Row className=\"mt-5\">\n                        <Col>\n                            <InputGroup size=\"lg\">\n                                <InputGroup.Text>Password</InputGroup.Text>\n                                <Form.Control id=\"assignedrp\" type=\"text\" value={this.state.roompw} readOnly />    \n                                <Button variant=\"outline-primary\" onClick={() => {this.copyInnertext(\"assignedrp\")}}>COPY</Button>                        \n                            </InputGroup>\n                        </Col>\n                    </Row>\n                    <Row className=\"mt-4\" align=\"center\">\n                        <Col className=\"d-grid gap-2\">\n                            <Button type=\"submit\" size=\"lg\">Create Room</Button>\n                        </Col>\n                    </Row>\n                </Form>\n                </Container>                    \n                </div>\n        );\n    }\n}\nclass RoomSelect extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = { roomcode : '', roompw : '', username: '', lgdin: false, checkinputvalid: false, checklgnvalid: false};\n        this.handleChangeRoomcode = this.handleChangeRoomcode.bind(this);\n        this.handleChangeRoompw = this.handleChangeRoompw.bind(this);\n        this.handleChangeUsername = this.handleChangeUsername.bind(this);\n        this.submitRoom = this.submitRoom.bind(this);\n    }\n    componentDidMount() {\n        socket.on('room', (lgdin) => {\n            this.setState({lgdin: lgdin});\n            // if(this.state.lgdin)\n            //     this.props.roomSelecter(); \n        });\n       \n    }\n    \n    handleChangeUsername(event){\n        this.setState({username: event.target.value});\n      }\n    handleChangeRoomcode(e) {\n        this.setState({roomcode : e.target.value});\n    }\n    handleChangeRoompw(e) {\n        this.setState({roompw : e.target.value});\n    }\n    submitRoom(e) {\n        e.preventDefault();\n        this.setState({username: '', checkinputvalid: true});\n        if(this.state.roomcode && this.state.roompw){\n            this.setState({checklgnvalid: true});\n            const user_obj = {\n                username: this.state.username ? this.state.username : 'Player',\n                id: socket.id,\n                roomcode: this.state.roomcode,\n                roompw: this.state.roompw\n            }\n            socket.emit('room', user_obj);\n        }\n    }\n    render(){\n        return(\n            <div className=\"container-xl\">\n                <Container className=\"\" id=\"room_input\"  onSubmit={this.submitRoom} >\n                    <Form>\n                    <Row className=\"mt-5\" align=\"center\">\n                        <Col>                           \n                            <InputGroup size=\"lg\">                           \n                                <InputGroup.Text>Username</InputGroup.Text>\n                                <FormControl \n                                    value={this.state.username}\n                                    onChange={this.handleChangeUsername}\n                                    placeholder=\"Player\"\n                                />\n                            </InputGroup>\n                        </Col>\n                    </Row>\n                    <Row className=\"mt-1\" align=\"center\">\n                        <Col>\n                            <InputGroup size=\"lg\">\n                                <InputGroup.Text>Roomcode</InputGroup.Text>\n                                <FormControl \n                                    value={this.state.roomcode}\n                                    onChange={this.handleChangeRoomcode}\n                                    placeholder=\"Roomcode\"\n                                    isInvalid={this.state.checkinputvalid && !this.state.roomcode.length}\n                                />\n                                <FormControl.Feedback type=\"invalid\" >\n                                    Roomcode is required\n                                </FormControl.Feedback>\n                            </InputGroup>\n                        </Col>\n                    </Row>\n                    <Row className=\"mt-1\" align=\"center\">\n                        <Col>\n                            <InputGroup size=\"lg\"  controledId>\n                                <InputGroup.Text>Password</InputGroup.Text>\n                                <FormControl \n                                    type=\"password\"\n                                    value={this.state.roompw}\n                                    onChange={this.handleChangeRoompw}\n                                    placeholder=\"Password\"\n                                    isInvalid= {this.state.checkinputvalid && !this.state.roompw.length}\n                                />\n                                <FormControl.Feedback type=\"invalid\">\n                                    Password is required\n                                </FormControl.Feedback>                               \n                            </InputGroup>\n                            {\n                                !this.state.lgdin && this.state.checklgnvalid ? <Alert className=\"mt-1\" variant=\"danger\">                           \n                                    Roomcode or password is invalid    \n                                </Alert>\n                                : <div></div>}\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center mt-1\" md=\"1\" align=\"center\">\n                        \n                    </Row>\n                    <Row className=\"mt-4\" align=\"center\">\n                        <Col className=\"d-grid gap-2\">\n                            <Button type=\"submit\" size=\"lg\">Login</Button>\n                        </Col>\n                    </Row>\n                </Form>\n                </Container>                    \n                </div>\n        );\n    }\n}\nclass RoomManage extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        return(\n            <div className=\"chat-app-wrapper\">\n                <Tabs defaultActiveKey=\"Select_Room\" id=\"RoomTabs\" variant=\"tabs\" className=\"mb-3\">\n                    <Tab className=\"inheirt-height-wrapper\" eventKey=\"Select_Room\" title=\"Select Room\">\n                        <RoomSelect roomSelecter={this.props.roomSelecter}/>\n                    </Tab>\n                    <Tab eventKey=\"Create_Room\" title=\"Create Room\">\n                        <RoomCreate />\n                    </Tab>\n                    <Tab eventKey=\"Chat_Main\" title=\"Chat Room\">\n                        <ChatMain />\n                    </Tab>\n                </Tabs>\n            </div>\n        );\n    }\n}\nexport default RoomManage;\n","import 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\nimport React from 'react';\nimport RoomManage from './component/RoomManage';\n\nfunction App() {\n  return (\n    <div>      \n      <RoomManage />   \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}